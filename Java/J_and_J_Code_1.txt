/* IMPORTANT: Multiple classes and nested static classes are supported */

/*
 * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;
*/

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail
import java.util.Scanner;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
public class TestClass {
    public static void main(String args[] ) throws Exception {
        /* Sample code to perform I/O:
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();                // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        //Scanner
        Scanner s = new Scanner(System.in);
        String name = s.nextLine();                 // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        */

        // Write your code here
        
        Scanner kb = new Scanner(System.in);
        int T = kb.nextInt();
        for(int p = 0; p < T; p++){
            String str = kb.next();
            char[] arr = str.toCharArray();
        
            HashMap<Character, Integer> map = new HashMap<Character, Integer>();
            for(int i = 0; i < arr.length; i++){
                if(map.containsKey(arr[i])){
                    map.put(arr[i], map.get(arr[i])+1);
                }
                else{
                    map.put(arr[i], 1);
                }
            }
            int max = 0;
            char maxC = 'z';
            Iterator it = map.entrySet().iterator();
            while(it.hasNext()){
                Map.Entry pair = (Map.Entry)it.next();
                if((int)pair.getValue() >= max){
                    if((int)pair.getValue() > max){
                        max = (int)pair.getValue();
                        maxC = (char)pair.getKey();
                    }
                    else if((int)((char)pair.getKey()) < (int)maxC){
                        max = (int)pair.getValue();
                        maxC = (char)pair.getKey();
                    }
                }
                it.remove();
            }
            System.out.println(maxC);
        }
    }
}